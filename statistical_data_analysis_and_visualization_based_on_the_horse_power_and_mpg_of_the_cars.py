# -*- coding: utf-8 -*-
"""Statistical Data Analysis and Visualization based on the Horse Power and MPG of the cars.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tBLgc4WGMxl-JXqSoEWr8-vTQwVgBvYv
"""

import altair as alt
import pandas as pd

# Load the dataset from the uploaded file
data = pd.read_csv('https://raw.githubusercontent.com/Reddy-kalwakolu/Activity7_Population/main/mtcars.csv')

# Print the loaded data
print(data)

# print the columns

print(data.columns)

# Plotting points on the X and Y axis with triangles for the desired column names
chart = alt.Chart(data).mark_point(shape='triangle').encode(
    x=alt.X('mpg:Q', title='Miles per Gallon'),  # Replace 'mpg' with your desired column
    y=alt.Y('hp:Q', title='Horsepower')          # Replace 'hp' with your desired column
)

chart

# Prepare unique values for dropdown from the 'cyl' column
cylinder_details = data['cyl'].unique()
options = cylinder_details.tolist()
labels = [str(option) + ' cylinders' for option in options]

# Create a dropdown for selecting number of cylinders
input_dropdown = alt.binding_select(
    options=options + [None],
    labels=labels + ['All'],
    name='Cylinders: '
)

# Create a selection that allows single selection from dropdown
selection = alt.selection_single(
    fields=['cyl'],
    bind=input_dropdown
)

# Create an interactive chart with the selection
display_chart = alt.Chart(data).mark_point().encode(
    x=alt.X('mpg:Q', title='Miles per Gallon'),
    y=alt.Y('hp:Q', title='Horsepower'),
    color=alt.condition(selection, 'cyl:N', alt.value('lightgrey'), legend=None),
    opacity=alt.condition(selection, alt.value(1), alt.value(0.2))
).add_selection(
    selection
)

display_chart

chart = alt.Chart(data).mark_point().encode(
    x=alt.X('wt:Q', title='Weight (1000 lbs)'),  # Weight of the car
    y=alt.Y('mpg:Q', title='Miles per Gallon'),  # Fuel efficiency
    color='gear:N',  # Number of gears as a nominal categorical variable
    tooltip=['cyl', 'hp', 'gear']  # Showing additional details on hover
)

chart

chart = alt.Chart(data).mark_point(shape='triangle', color="red").encode(
    x=alt.X('wt:Q', title='Weight of Car (1000 lbs)'),  # X-axis represents the weight of the car
    y=alt.Y('hp:Q', title='Horsepower'),  # Y-axis represents the horsepower
    tooltip=['mpg:Q', 'gear:O', 'carb:O']  # Tooltips for miles per gallon, gears, and carburetors
)

chart



